package net.bladehunt.rpp.codegen

import com.grack.nanojson.JsonArray
import com.grack.nanojson.JsonObject
import net.bladehunt.rpp.pack.Font
import org.intellij.lang.annotations.Language

private inline fun java(@Language("java") value: String) = value

fun generateFontClass(packageQualifier: String, className: String, font: Font, source: JsonObject):  String {
    return buildString {
            append(
                java(
                    """
                        package $packageQualifier;
                        
                        import net.kyori.adventure.key.Key;
                        import net.kyori.adventure.text.Component;
                        
                        // Generated by https://github.com/bladehuntmc/rpp
                        public class $className {
                            public static final Key FONT_KEY = Key.key("${font.namespace}", "${font.font}");
                    """.trimIndent()
                )
            )
        append("\n")
        val providers = requireNotNull(source["providers"] as? JsonArray?) {
            "Generated font class $className is missing the providers key"
        }

        var withoutName = 0

        var withoutType = 0

        providers.forEach { provider ->
            provider as JsonObject
            val type = provider["type"] as? String? ?: run {
                withoutType++
                return@forEach
            }

            if (!type.equals("bitmap", ignoreCase = true)) return@forEach

            val name = provider.remove("name") as? String? ?: run {
                withoutName++
                return@forEach
            }

            val chars = provider["chars"] as? JsonArray ?: return@forEach

            val firstChar = chars.firstOrNull() as? String ?: return@forEach

            append(java("\n    public static final Component $name = Component.text(\"$firstChar\").font(FONT_KEY);"))
        }

        if (withoutType > 0) println("Warn: $withoutType provider(s) in $font does not have a type")
        if (withoutName > 0) println("Warn: $withoutName provider(s) in $font does not have a name")

        append("\n")
        append("}")
        }
}